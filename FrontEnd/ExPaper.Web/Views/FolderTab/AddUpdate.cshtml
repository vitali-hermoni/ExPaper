@using ExPaper.Web.ViewModels;
@model FolderTabDto;


<form asp-action="AddUpdate">
    <br />
    <div class="container border p-3">
        <h1 class="text-white text-left">Register</h1>

        <hr />
        <div class="row">
            <input asp-for="@Model.Id" type="hidden" />
            <input asp-for="@Model.FolderId" type="hidden" />


            <div class="col-2">
                <label class="control-label pt-2" style="font-size:20px;"> Name</label>
            </div>
            <div class="col-10 pb-3">
                <input asp-for="@Model.Name" class="form-control" required value="@Model.Name" />
            </div>

            

            <div class="col-2">
                <label class="control-label pt-2" style="font-size:20px;"> </label>
            </div>
            <div class="col-10 pb-3">
                <form id="colorOrgForm" asp-action="AddUpdate">
                    <input type="hidden" asp-for="@Model.Color" name="selectedColor" value="@Model.Color"/>
                    
                    <div class="dropdown">
                        <button class="btn btn-secondary dropdown-toggle btn-block" 
                                type="button" 
                                data-bs-toggle="dropdown" 
                                aria-expanded="false" 
                                id="dropdownColor" 
                                style="width: 200px;"
                                value="@Model.Color">
                                @(string.IsNullOrEmpty(Model.Color) ? "WHITE" : Model.Color)
                        </button>

                        <ul class="dropdown-menu" aria-labelledby="dropdownColor">
                            <button name="WHITE" class="dropdown-item" type="button" onclick="showColor(this)">WHITE</button>
                            <button name="BLACK" class="dropdown-item" type="button" onclick="showColor(this)">BLACK</button>
                            <button name="RED" class="dropdown-item" type="button" onclick="showColor(this)">RED</button>
                            <button name="YELLOW" class="dropdown-item" type="button" onclick="showColor(this)">YELLOW</button>
                            <button name="GREEN" class="dropdown-item" type="button" onclick="showColor(this)">GREEN</button>
                            <button name="BLUE" class="dropdown-item" type="button" onclick="showColor(this)">BLUE</button>
                            <button name="GRAY" class="dropdown-item" type="button" onclick="showColor(this)">GRAY</button>
                        </ul>
                    </div>
                </form>
            </div>




            <div class="col-5 offset-2">
                <a asp-action="Index" class="btn-primary btn form-control">Abbrechen</a>
            </div>

            <div class="col-5">
                <input type="submit" value="Add / Update" class="btn btn-success form-control" />
            </div>

        </div>

        <div>
        </div>
    </div>
</form>


@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}


<script>
    function showColor(item) {
        const selectedColorName = item.getAttribute("name");
        const selectedColorText = item.innerHTML;
        document.querySelector('input[name="selectedColor"]').value = selectedColorName;
        document.getElementById("dropdownColor").innerHTML = selectedColorText;
    }


    document.getElementById("customFile").addEventListener("change", function (event) {
        const fileInput = event.target;
        if (fileInput.files && fileInput.files.length > 0) {
            const selectedFile = fileInput.files[0];
            const reader = new FileReader();
            reader.onload = function (e) {
                document.querySelector('input[name="ImageBase64"]').value = e.target.result;
            };
            reader.readAsDataURL(selectedFile);
        }
    });
</script>

